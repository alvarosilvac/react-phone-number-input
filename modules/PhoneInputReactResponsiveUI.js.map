{"version":3,"sources":["../source/PhoneInputReactResponsiveUI.js"],"names":["PhoneInputReactResponsiveUI","storeInputRef","ref","input","getInputClassName","disabled","invalid","props","countrySelectProperties","focus","propTypes","inputClassName","string","saveOnIcons","bool","nativeCountrySelect","countrySelectAriaLabel","countrySelectCloseAriaLabel","countrySelectMaxItems","number","countrySelectToggleClassName"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEqBA,2B;;;;;;;;;;;;;;8NAmCpBC,a,GAAgB,UAACC,GAAD;AAAA,UAAS,MAAKC,KAAL,GAAaD,GAAtB;AAAA,G,QAehBE,iB,GAAoB,iBACpB;AAAA,OADuBC,QACvB,SADuBA,QACvB;AAAA,OADiCC,OACjC,SADiCA,OACjC;;AACC,UAAO,0BAEN,aAFM,EAGN,qBAHM,EAIN,mBAJM,EAKN;AACC,kCAAgCA,OADjC;AAEC,mCAAgCD;AAFjC,IALM,CAAP;AAUA,G;;;;;2BAxBD;AACC,UACC,iEACM,KAAKE,KADX;AAEC,SAAM,KAAKN,aAFZ;AAGC,uBAAoB,KAAKG,iBAH1B;AAIC,oEAJD;AAKC,6BAA0BI,uBAL3B;AAMC,2CAND,IADD;AASA;;;;;AAgBD;0BAEA;AACC,UAAO,KAAKL,KAAL,CAAWM,KAAX,EAAP;AACA;;;;4BAlEMC,S,GACP;AACC;AACA;AACA;AACAC,iBAAiB,oBAAUC,MAJ5B;;AAMC;AACA;AACA;AACAC,cAAc,oBAAUC,IATzB;;AAWC;AACA;AACA;AACAC,sBAAsB,oBAAUD,IAdjC;;AAgBC;AACAE,yBAAyB,oBAAUJ,MAjBpC;;AAmBC;AACA;AACA;AACAK,8BAA8B,oBAAUL,MAtBzC;;AAwBC;AACAM,wBAAwB,oBAAUC,MAzBnC;;AA2BC;AACA;AACAC,+BAA+B,oBAAUR;AA7B1C,C;kBAHoBZ,2B;;;AAuErB,IAAMQ,0BACN;AACCG,iBAA+B,gBADhC;AAECE,cAA+B,aAFhC;AAGCE,sBAA+B,gBAHhC;AAICC,yBAA+B,WAJhC;AAKCC,8BAA+B,gBALhC;AAMCC,wBAA+B,UANhC;AAOCE,+BAA+B;AAPhC,CADA","file":"PhoneInputReactResponsiveUI.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport PhoneInput from './PhoneInput'\nimport CountrySelect from './CountrySelectReactResponsiveUI'\n\nexport default class PhoneInputReactResponsiveUI extends Component\n{\n\tstatic propTypes =\n\t{\n\t\t// `<input/>` CSS class.\n\t\t// Both for the phone number `<input/>` and\n\t\t// the country select autocomplete `<input/>`.\n\t\tinputClassName : PropTypes.string,\n\n\t\t// If set to `false`, then country flags will be shown\n\t\t// for all countries when country `<select/>` is expanded.\n\t\t// By default shows flag only for currently selected country.\n\t\tsaveOnIcons : PropTypes.bool,\n\n\t\t// Whether to use native country `<select/>` when it's expanded.\n\t\t// Deprecated. Will be removed in some future major version.\n\t\t// Use `<PhoneInputNative/>` instead.\n\t\tnativeCountrySelect : PropTypes.bool,\n\n\t\t// `aria-label` for the `<Select/>`'s toggle `<button/>`.\n\t\tcountrySelectAriaLabel : PropTypes.string,\n\n\t\t// `aria-label` for the `<Select/>`'s \"Close\" button\n\t\t// (which is an \"x\" visible in fullscreen mode).\n\t\t// (not yet implemented but is likely to be).\n\t\tcountrySelectCloseAriaLabel : PropTypes.string,\n\n\t\t// Defines the height (in items) of the expanded country `<select/>`.\n\t\tcountrySelectMaxItems : PropTypes.number,\n\n\t\t// Country `<select/>` toggle `<button/>` CSS class.\n\t\t// Deprecated. Will be removed in some future major version.\n\t\tcountrySelectToggleClassName : PropTypes.string\n\t}\n\n\tstoreInputRef = (ref) => this.input = ref\n\n\trender()\n\t{\n\t\treturn (\n\t\t\t<PhoneInput\n\t\t\t\t{ ...this.props }\n\t\t\t\tref={ this.storeInputRef }\n\t\t\t\tgetInputClassName={ this.getInputClassName }\n\t\t\t\tcountrySelectComponent={ CountrySelect }\n\t\t\t\tcountrySelectProperties={ countrySelectProperties }\n\t\t\t\tcountrySelectHidesPhoneInputField/>\n\t\t)\n\t}\n\n\tgetInputClassName = ({ disabled, invalid }) =>\n\t{\n\t\treturn classNames\n\t\t(\n\t\t\t'rrui__input',\n\t\t\t'rrui__input-element',\n\t\t\t'rrui__input-field',\n\t\t\t{\n\t\t\t\t'rrui__input-field--invalid'  : invalid,\n\t\t\t\t'rrui__input-field--disabled' : disabled\n\t\t\t}\n\t\t)\n\t}\n\n\t// Proxy `.focus()` method.\n\tfocus()\n\t{\n\t\treturn this.input.focus()\n\t}\n}\n\nconst countrySelectProperties =\n{\n\tinputClassName               : 'inputClassName',\n\tsaveOnIcons                  : 'saveOnIcons',\n\tnativeCountrySelect          : 'nativeExpanded',\n\tcountrySelectAriaLabel       : 'ariaLabel',\n\tcountrySelectCloseAriaLabel  : 'closeAriaLabel',\n\tcountrySelectMaxItems        : 'maxItems',\n\tcountrySelectToggleClassName : 'toggleClassName'\n}"]}